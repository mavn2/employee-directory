{"version":3,"sources":["utils/API.js","components/TableItem/index.js","components/EmployeeTable/index.js","pages/Home.js","App.js","index.js"],"names":["API","getUsers","axios","get","EmployeeTableItem","number","image","name","phone","dob","src","alt","EmployeeTable","data","map","employee","indexOf","picture","medium","first","last","date","slice","login","uuid","Home","useState","rawList","setRawList","useEffect","then","res","results","setDisplayList","catch","err","console","log","displayList","sortState","setSortState","nameSort","a","sort","sorted","Table","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAMeA,EAJH,CACVC,SAAU,kBAAMC,IAAMC,IAAI,mD,QCmBbC,G,MAlBU,SAAC,GAMnB,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,IAEA,OACE,+BACE,6BAAKJ,IACL,6BAAI,qBAAKK,IAAKJ,EAAOK,IAAKJ,MAC1B,6BAAKA,IACL,6BAAKC,IACL,6BAAKC,SCQIG,MAnBR,YAA+B,IAAPC,EAAM,EAANA,KAC7B,OACE,gCACGA,EAAKC,KAAI,SAAAC,GAAQ,OAEd,cAAC,EAAD,CAEEV,OAAQQ,EAAKG,QAAQD,GAAY,EACjCT,MAAOS,EAASE,QAAQC,OACxBX,KAAI,UAAKQ,EAASR,KAAKY,MAAnB,YAA4BJ,EAASR,KAAKa,MAC9CZ,MAAOO,EAASP,MAChBC,IAAKM,EAASN,IAAIY,KAAKC,MAAM,EAAG,KAL3BP,EAASQ,MAAMC,YCiDjBC,MAvDf,WAAgB,MAEgBC,mBAAS,IAFzB,mBAEPC,EAFO,KAEEC,EAFF,KAKdC,qBAAU,WACR7B,EAAIC,WACH6B,MAAM,SAAAC,GACLH,EAAWG,EAAIlB,KAAKmB,SACpBC,EAAeF,EAAIlB,KAAKmB,YAEzBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,IAZW,MAewBT,mBAASC,GAfjC,mBAePW,EAfO,KAeML,EAfN,OAkBoBP,mBAAS,QAlB7B,mBAkBPa,EAlBO,KAkBIC,EAlBJ,KA6BRC,EAAQ,uCAAG,4BAAAC,EAAA,sEACQf,EAAQgB,OADhB,OACPC,EADO,OAEbX,EAAeW,GACfR,QAAQC,IAAIC,GAHC,2CAAH,qDAQd,OACE,eAACO,EAAA,EAAD,WACA,gCACE,+BACE,6BAAI,wBAAQC,aAnBC,SAAdP,IACDN,EAAeN,GACfa,EAAa,UAiBP,iBACJ,uCACA,6BAAI,wBAAQM,QAASL,EAAjB,oBACJ,uCACA,0CAGF,cAAC,EAAD,CACA5B,KAAMyB,QC7CGS,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8706a312.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API = {\n  getUsers: () => axios.get('https://randomuser.me/api/?results=200&nat=us')\n};\n\nexport default API;\n","import React from \"react\";\n\n// Returns a row for the employee table based on props\n// Destructuring props as they're passed in results in cleaner code\nconst EmployeeTableItem= ({\n  number,\n  image,\n  name,\n  phone,\n  dob\n}) => {\n  return (\n    <tr>\n      <td>{number}</td>\n      <td><img src={image} alt={name}/></td>\n      <td>{name}</td>\n      <td>{phone}</td>\n      <td>{dob}</td>\n    </tr>\n  )\n}\n\nexport default EmployeeTableItem;\n","import React from 'react';\nimport EmployeeTableItem from \"../../components/TableItem\";\n\n// Takes in props, destructures props object as it is passed in\n// In line 20 on, array.map() method is used to isolate relevant components and create an array\n// of JSX components that are displayed on the page\nexport function EmployeeTable({data}){\n  return (\n    <tbody>\n      {data.map(employee => \n        (\n          <EmployeeTableItem\n            key={employee.login.uuid}\n            number={data.indexOf(employee) + 1}\n            image={employee.picture.medium}\n            name={`${employee.name.first} ${employee.name.last}`}\n            phone={employee.phone}\n            dob={employee.dob.date.slice(0, 10)}\n          />\n        ))\n      }\n    </tbody>\n  )\n}\n\nexport default EmployeeTable;\n","import React, {useEffect, useState} from 'react';\nimport API from '../utils/API';\nimport Table from 'react-bootstrap/Table';\nimport Jumbotron from '../components/Jumbotron';\nimport EmployeeTable from '../components/EmployeeTable'\n\nfunction Home() {\n  //Stateful array used to store clean 'employee' data from API\n  const [rawList, setRawList] = useState([])\n\n  // Get data from API and update above list\n  useEffect(() => {\n    API.getUsers() \n    .then( res => {\n      setRawList(res.data.results)\n      setDisplayList(res.data.results)\n    })\n    .catch(err => console.log(err))\n  }, [])\n\n  // Stateful array to contain (potentially) filtered data, intended for display\n  const [displayList, setDisplayList] = useState(rawList);\n\n  //Sorted state to track which column, if any, has been used to sort data\n  const [sortState, setSortState] = useState(\"none\")\n\n  //Set results to original order\n  const defaultSort = () => {\n    if(sortState !== \"none\"){\n      setDisplayList(rawList)\n      setSortState(\"none\")\n    };\n  };\n\n  //Sort results by name\n  const nameSort = async () => {\n      const sorted = await rawList.sort()\n      setDisplayList(sorted);\n      console.log(displayList)\n  };\n\n  //Set \n  //imported all html/bootstrap components here, but might make sense to move some to App-header, nav\n  return(\n    <Table>\n    <thead>\n      <tr>\n        <th><button onClick={defaultSort()}>#</button></th>\n        <th>Image</th>\n        <th><button onClick={nameSort}>name</button></th>\n        <th>Phone</th>\n        <th>DOB</th>\n      </tr>\n    </thead>\n      <EmployeeTable \n      data={displayList}\n      />\n    </Table>\n  )\n}\n\nexport default Home;","import Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}