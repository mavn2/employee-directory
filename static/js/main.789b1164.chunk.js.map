{"version":3,"sources":["utils/API.js","components/SearchBar/index.js","components/TableItem/index.js","components/UserTable/index.js","pages/Home.js","components/Header/index.js","App.js","index.js"],"names":["API","getUsers","axios","get","SearchBar","search","handleInputChange","Form","Group","Label","Control","type","placeholder","value","onChange","UserTableItem","number","image","name","phone","dob","src","alt","UserTable","data","filter","useState","displayData","setDisplayData","sortState","setSortState","console","log","useEffect","Table","striped","bordered","onClick","sort","a","b","sortIndex","first","last","map","user","fullName","includes","picture","medium","date","slice","login","uuid","Home","rawList","setRawList","setSearch","then","res","results","catch","err","Container","event","target","indexOf","header","props","Jumbotron","fluid","style","backgroundColor","className","title","App","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.789b1164.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API = {\n  getUsers: () => axios.get('https://randomuser.me/api/?results=200&nat=us'),\n};\n\nexport default API;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\n// Returns search bar, accepts input value/logic as params.\n// Props object is destructured in line six below, ES6 allows implicit return\nconst SearchBar = ({ search, handleInputChange }) => (\n  <Form>\n    <Form.Group>\n      <Form.Label>Search Users</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Search by Name\"\n        value={search}\n        onChange={handleInputChange}\n      />\n    </Form.Group>\n  </Form>\n);\n\nexport default SearchBar;\n","import React from 'react';\n\n// Returns a row for the employee table based on props\n// Destructuring props as they're passed in results in cleaner code\nconst UserTableItem = ({\n  number,\n  image,\n  name,\n  phone,\n  dob,\n}) => (\n  <tr>\n    <td>{number}</td>\n    <td><img src={image} alt={name} /></td>\n    <td>{name}</td>\n    <td>{phone}</td>\n    <td>{dob}</td>\n  </tr>\n);\n\nexport default UserTableItem;\n","import React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport UserTableItem from '../TableItem';\n\n// Takes in props, destructures props object as it is passed in\n// In line 20 on, array.map() method is used to isolate relevant components and create an array\n// of JSX components that are displayed on the page\nconst UserTable = ({ data, filter }) => {\n  // State to store data for sorting/presentation\n  const [displayData, setDisplayData] = useState([]);\n\n  // Track sort type/status\n  const [sortState, setSortState] = useState('none');\n  console.log('Sorting by: ', sortState);\n\n  // Update displayData when input received from parent\n  useEffect(() => {\n    setDisplayData(data);\n  }, [data]);\n\n  // Sort users by first then last name\n  const sortByName = () => {\n    setDisplayData(displayData.sort(((a, b) => {\n      if (a.name.first < b.name.first) {\n        return -1;\n      }\n      if (a.name.first > b.name.first) {\n        return 1;\n      }\n      if (a.name.first === b.name.first) {\n        if (a.name.last < b.name.last) {\n          return -1;\n        }\n        if (a.name.last > b.name.last) {\n          return 1;\n        }\n      }\n      return 0;\n    })));\n    setSortState('name');\n  };\n\n  // Return users to received order\n  const defaultSort = () => {\n    setDisplayData(displayData.sort((a, b) => a.sortIndex - b.sortIndex));\n    setSortState('none');\n  };\n\n  // Return table, pass data for users whose names include any searched characters to be rendered\n  return (\n    <Table striped bordered>\n      <thead>\n        <tr>\n          <th><button type=\"button\" onClick={() => defaultSort()}>#</button></th>\n          <th>Image</th>\n          <th><button type=\"button\" onClick={() => sortByName()}>Name</button></th>\n          <th>Phone</th>\n          <th>DOB</th>\n        </tr>\n      </thead>\n      <tbody>\n        {displayData.map((user) => {\n          if (user.fullName.includes(filter)) {\n            return (\n              <UserTableItem\n                key={user.login.uuid}\n                number={user.sortIndex + 1}\n                image={user.picture.medium}\n                name={user.fullName}\n                phone={user.phone}\n                dob={user.dob.date.slice(0, 10)}\n              />\n            );\n          }\n          return null;\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default UserTable;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport API from '../utils/API';\nimport SearchBar from '../components/SearchBar';\nimport UserTable from '../components/UserTable';\n\nfunction Home() {\n  // Stateful array used to store clean 'user' data from API\n  const [rawList, setRawList] = useState([]);\n\n  // Stateful string to hold user search value\n  const [search, setSearch] = useState('');\n\n  // Get data from API and update above list\n  useEffect(() => {\n    API.getUsers()\n      .then((res) => {\n        setRawList(res.data.results);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Handles user inputs in search bar\n  const handleInputChange = (event) => {\n    // Update search state to reflect user input\n    setSearch(event.target.value);\n  };\n\n  // Returns app's main page/components\n  // User objects passed to UserTable are given two additional keys/values\n  return (\n    <Container>\n      <SearchBar\n        search={search}\n        handleInputChange={handleInputChange}\n      />\n      <UserTable\n        filter={search}\n        data={rawList.map((user) => ({\n          ...user,\n          sortIndex: rawList.indexOf(user),\n          fullName: `${user.name.first} ${user.name.last}`,\n        }))}\n      />\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Container, Jumbotron } from 'react-bootstrap';\n\n// Returns a full-width banner containing the app's title\nconst header = (props) => (\n  <Jumbotron fluid style={{ backgroundColor: 'blue' }}>\n    <Container>\n      <h1 className=\"text-center text-white\">{props.title}</h1>\n    </Container>\n  </Jumbotron>\n);\n\nexport default header;\n","import React from 'react';\nimport Home from './pages/Home';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div>\n      <Header title=\"User Directory\" />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}